/*
 * Copyright (C) 2019-2021 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

import {TileLayer} from '@here/xyz-maps-core';

const NULL = null;

/**
 *  Event
 *
 *  @class
 *  @interface
 *  @public
 *  @name mapedit.API.Event
 */
export class EditorEvent {
    type: string;

    timeStamp: DOMTimeStamp;

    mapX: number;
    mapY: number;

    nativeEvent: Event;

    button: number;

    target: any;

    detail: {
        layer?: TileLayer;
    };

    constructor(type: string, mapX, mapY, nativeEvent, button, target, detail) {
        const ee = this;

        ee.type = type;

        ee.timeStamp = Date.now();

        ee.mapX = mapX;

        ee.mapY = mapY;

        ee.nativeEvent = nativeEvent;

        ee.button = button;

        ee.target = target;

        ee.detail = detail;
    }
}

/** @expose */
const EvProto = EditorEvent.prototype;

/**
 * The native MouseEvent generated by the browser. This property will be null if the
 * Event was not directly generated from a native Touch- or Mouse-event.
 *
 * @public
 * @expose
 * @type Event
 *
 * @name mapedit.API.Event.prototype.nativeEvent
 */
EvProto.nativeEvent = NULL;

/** @expose */
EvProto.detail = NULL;

/**
 *  The map feature this event relates to.
 *
 *  @public
 *  @expose
 *  @type mapedit.map.features.simplified.Object
 *
 *  @name mapedit.API.Event.prototype.target
 */
EvProto.target = NULL;

/**
 *  Gives the x coordinate relative to the map element in pixels
 *
 *  @public
 *  @expose
 *  @type number
 *
 *  @name mapedit.API.Event.prototype.mapX
 */
EvProto.mapX = NULL;

/**
 *  Gives the y coordinate relative to the map element in pixels
 *
 *  @public
 *  @expose
 *  @type number
 *
 *  @name mapedit.API.Event.prototype.mapY
 */
EvProto.mapY = NULL;

/**
 *  The type of mouse event. This will be the same as the listener it maps to
 *
 *  @public
 *  @expose
 *  @type number
 *
 *  @name mapedit.API.Event.prototype.type
 */
EvProto.type = NULL;

/**
 *  This property holds the numeric id of a mouse button that has changed state, because it was pressed or released.
 *
 *  @public
 *  @expose
 *  @type number
 *
 *  @name mapedit.API.Event.prototype.button
 */
EvProto.button = NULL;

/**
 *  This property specifies the time at which the event was created in milliseconds relative to 1970-01-01T00:00:00Z.
 *
 *  @public
 *  @expose
 *  @type number
 *
 *  @name mapedit.API.Event.prototype.timeStamp
 */
EvProto.timeStamp = NULL;

/** @expose */
EvProto.toString = function() {
    return 'EditorEvent ' + this.type;
};


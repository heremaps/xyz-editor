 <!DOCTYPE html>
 <html>
	<head>
		<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=no">
		<title>XYZ Maps Example: Add and remove lines</title>

	    <script src="${XYZ_COMMON_PATH}" type="text/javascript" charset="UTF-8" ></script>
	    <script src="${XYZ_CORE_PATH}" type="text/javascript" charset="UTF-8" ></script>
	    <script src="${XYZ_DISPLAY_PATH}" type="text/javascript" charset="UTF-8" ></script>


 		<style type="text/css">
			#map {
				position: absolute;
            	overflow: hidden;
				top: 0;
				left: 0;
				width: 100%;
                height: 100%;
			}
 		</style>
	</head>
	<body>
		<div id="map"></div>
		<a id="linebutton" class="button">Add Lines</a>

		<script type="application/javascript">
			//specify your credentials for image layer
	      	var YOUR_ACCESS_TOKEN = window.parent.YOUR_ACCESS_TOKEN;

			var bgLayer = new here.xyz.maps.layers.MVTLayer({
				name: 'background layer',
				min: 1,
				max: 20,
				remote: {
					url: 'https://xyz.api.here.com/tiles/osmbase/256/all/{z}/{x}/{y}.mvt?access_token='+YOUR_ACCESS_TOKEN
				}
			});
			var myLayer = new here.xyz.maps.layers.TileLayer({
				name: 'my Layer',
				min: 15,
				max: 20,
				provider: new here.xyz.maps.providers.LocalProvider ({
					name:  'my Provider'
				}),
				style:{
					styleGroups: {
						navlinkStyle: [
							{zIndex:0, type:"Line", stroke:"#C799E8", strokeWidth:12, opacity: 0.9}
						]
					},
					assign: function(feature){
						return "navlinkStyle";
					}
				}
			});

			// setup the Map Display
			const display = new here.xyz.maps.Map( document.getElementById("map"), {
			    zoomLevel : 18,
			    center: {
			        longitude: -117.145577, latitude: 32.707129
			    },
				behaviour: {
					pitch: true
				},
			    // add layers to display
			    layers: [bgLayer, myLayer]
			});

/*###visiblesource*/
var AddedLines = [];

// click "Add Lines"to add lines features, click "Remove Lines" to remove the added Lines
document.querySelector("#linebutton").onclick = function(){
	if(!AddedLines.length){
		// Add lines Feature
		AddedLines = myLayer.addFeature(Lines);

		this.innerText="Remove Lines";
	}
	else{
		// Remove the added lines Feature
		AddedLines.forEach(function(lines){
			myLayer.removeFeature(lines);
		})
		AddedLines = [];

		this.innerText="Add Lines";
	}
};

// collection of lines
var Lines = {
	"features":[{
		geometry: {
			coordinates: [[-117.14666,32.70627,0],[-117.1458,32.70628,0]],
			type: "LineString"
		},
		type: "Feature"
	},{
		geometry: {
			coordinates: [[-117.1458,32.70628,0],[-117.1458,32.70732,0]],
			type: "LineString"
		},
		type: "Feature"
	},{
		geometry: {
			coordinates: [[-117.14486,32.70628,0],[-117.14486,32.70731,0]],
			type: "LineString"
		},
		type: "Feature"
	},{
		geometry: {
			coordinates: [[-117.1458,32.70732,0],[-117.1458,32.70836,0]],
			type: "LineString"
		},
		type: "Feature"
	},{
		geometry: {
			coordinates: [[-117.14486,32.70731,0],[-117.14488,32.70836,0]],
			type: "LineString"
		},
		type: "Feature"
	},{
		geometry: {
			coordinates: [[-117.14486,32.70731,0],[-117.1458,32.70732,0]],
			type: "LineString"
		},
		type: "Feature"
	},{
		geometry: {
			coordinates: [[-117.14667,32.70732,0],[-117.1458,32.70732,0]],
			type: "LineString"
		},
		type: "Feature"
	},{
		geometry: {
			coordinates: [[-117.14486,32.70731,0],[-117.14397,32.70732,0]],
			type: "LineString"
		},
		type: "Feature"
	},{
		geometry: {
			coordinates: [[-117.1458,32.70628,0],[-117.14551,32.70628,0],[-117.14526,32.70628,0],[-117.14486,32.70628,0]],
			type: "LineString"
		},
		type: "Feature"
	}],
	type: "FeatureCollection"
}

/*visiblesource###*/

            // used by playground to automatically resize the map on size change
            window.display = display;
		</script>
	</body>
</html>
